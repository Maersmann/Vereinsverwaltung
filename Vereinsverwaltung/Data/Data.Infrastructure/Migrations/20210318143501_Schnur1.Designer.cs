// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Vereinsverwaltung.Data.Infrastructure;

namespace Vereinsverwaltung.Data.Infrastructure.Migrations
{
    [DbContext(typeof(Repository))]
    [Migration("20210318143501_Schnur1")]
    partial class Schnur1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Vereinsverwaltung.Data.Entitys.MitgliederEntitys.Mitglied", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("AusgetretenAm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Eintrittsdatum")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Geburtstag")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("MitgliedStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("Mitgliedsnr")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Ort")
                        .HasColumnType("text");

                    b.Property<string>("Straße")
                        .HasColumnName("Strasse")
                        .HasColumnType("text");

                    b.Property<string>("Vorname")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Mitglied");
                });

            modelBuilder.Entity("Vereinsverwaltung.Data.Model.SchluesselEntitys.Schluessel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Ausgegeben")
                        .HasColumnType("integer");

                    b.Property<string>("Beschreibung")
                        .HasColumnType("text");

                    b.Property<int>("Bestand")
                        .HasColumnType("integer");

                    b.Property<string>("Bezeichnung")
                        .HasColumnType("text");

                    b.Property<int>("Nummer")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("Schluessel");
                });

            modelBuilder.Entity("Vereinsverwaltung.Data.Model.SchluesselEntitys.Schluesselbesitzer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("MitgliedID")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("MitgliedID")
                        .IsUnique();

                    b.ToTable("Schluesselbesitzer");
                });

            modelBuilder.Entity("Vereinsverwaltung.Data.Model.SchluesselEntitys.Schluesselzuteilung", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Anzahl")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ErhaltenAm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("SchluesselID")
                        .HasColumnType("integer");

                    b.Property<int>("SchluesselbesitzerID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("SchluesselID");

                    b.HasIndex("SchluesselbesitzerID");

                    b.ToTable("Schluesselzuteilung");
                });

            modelBuilder.Entity("Vereinsverwaltung.Data.Model.SchluesselEntitys.SchluesselzuteilungHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Anzahl")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("SchluesselID")
                        .HasColumnType("integer");

                    b.Property<int>("SchluesselbesitzerID")
                        .HasColumnType("integer");

                    b.Property<int?>("SchluesselzuteilungID")
                        .HasColumnType("integer");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("SchluesselID");

                    b.HasIndex("SchluesselbesitzerID");

                    b.HasIndex("SchluesselzuteilungID")
                        .IsUnique();

                    b.ToTable("SchluesselzuteilungHistory");
                });

            modelBuilder.Entity("Vereinsverwaltung.Data.Model.SchnurEntitys.Schnur", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Bezeichnung")
                        .HasColumnType("text");

                    b.Property<int>("Schnurtyp")
                        .HasColumnType("integer");

                    b.Property<bool>("Sichtbar")
                        .HasColumnType("boolean");

                    b.HasKey("ID");

                    b.ToTable("Schnur");
                });

            modelBuilder.Entity("Vereinsverwaltung.Data.Model.SchnurEntitys.Schnurauszeichnung", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Bezeichnung")
                        .HasColumnType("text");

                    b.Property<int>("HauptteilID")
                        .HasColumnType("integer");

                    b.Property<int>("Rangfolge")
                        .HasColumnType("integer");

                    b.Property<int?>("ZusatzID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("HauptteilID");

                    b.HasIndex("ZusatzID");

                    b.ToTable("Schnurauszeichnung");
                });

            modelBuilder.Entity("Vereinsverwaltung.Data.Model.SchluesselEntitys.Schluesselbesitzer", b =>
                {
                    b.HasOne("Vereinsverwaltung.Data.Entitys.MitgliederEntitys.Mitglied", "Mitglied")
                        .WithOne("Schluesselbesitzer")
                        .HasForeignKey("Vereinsverwaltung.Data.Model.SchluesselEntitys.Schluesselbesitzer", "MitgliedID");
                });

            modelBuilder.Entity("Vereinsverwaltung.Data.Model.SchluesselEntitys.Schluesselzuteilung", b =>
                {
                    b.HasOne("Vereinsverwaltung.Data.Model.SchluesselEntitys.Schluessel", "Schluessel")
                        .WithMany("Verteilung")
                        .HasForeignKey("SchluesselID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vereinsverwaltung.Data.Model.SchluesselEntitys.Schluesselbesitzer", "Schluesselbesitzer")
                        .WithMany("Verteilung")
                        .HasForeignKey("SchluesselbesitzerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Vereinsverwaltung.Data.Model.SchluesselEntitys.SchluesselzuteilungHistory", b =>
                {
                    b.HasOne("Vereinsverwaltung.Data.Model.SchluesselEntitys.Schluessel", "Schluessel")
                        .WithMany()
                        .HasForeignKey("SchluesselID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vereinsverwaltung.Data.Model.SchluesselEntitys.Schluesselbesitzer", "Schluesselbesitzer")
                        .WithMany()
                        .HasForeignKey("SchluesselbesitzerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vereinsverwaltung.Data.Model.SchluesselEntitys.Schluesselzuteilung", "Schluesselzuteilung")
                        .WithOne("SchluesselzuteilungHistory")
                        .HasForeignKey("Vereinsverwaltung.Data.Model.SchluesselEntitys.SchluesselzuteilungHistory", "SchluesselzuteilungID");
                });

            modelBuilder.Entity("Vereinsverwaltung.Data.Model.SchnurEntitys.Schnurauszeichnung", b =>
                {
                    b.HasOne("Vereinsverwaltung.Data.Model.SchnurEntitys.Schnur", "Hauptteil")
                        .WithMany()
                        .HasForeignKey("HauptteilID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vereinsverwaltung.Data.Model.SchnurEntitys.Schnur", "Zusatz")
                        .WithMany()
                        .HasForeignKey("ZusatzID");
                });
#pragma warning restore 612, 618
        }
    }
}
